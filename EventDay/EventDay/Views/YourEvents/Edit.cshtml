@model EventDay.Models.Event

@{
    ViewBag.Title = "Edit";
}

<h2>Edytuj</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script src="/Scripts/Gallery.js"></script>
<link rel="stylesheet" type="text/css" href="/Content/Gallery.css">

@using (Html.BeginForm("Edit", "YourEvents", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Event</legend>

        @Html.HiddenFor(model => model.EventId)
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.DateCreated)
        @Html.HiddenFor(model => model.DateBegin)
        @Html.HiddenFor(model => model.DateEnd)
        @Html.HiddenFor(model => model.DateBeginRegistation)
        @Html.HiddenFor(model => model.DateEndRegistation)
        @Html.HiddenFor(model => model.HourEndRegistration)
        @Html.HiddenFor(model => model.HourEnd)
        @Html.HiddenFor(model => model.Regulations)
        @Html.HiddenFor(model => model.ProfileImage)

        <div class="editor-label">
            @Html.LabelFor(model => model.Category.Name)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.eventCategory, "Wybierz kategorię", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AccessId)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            <label>Widoczne</label>
            @Html.RadioButtonFor(model => model.AccessId, "Widoczne")
            <label>Ukryte</label>
            @Html.RadioButtonFor(model => model.AccessId, "Ukryte")           
            @Html.ValidationMessageFor(model => model.AccessId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RecruitmentId)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            <label>Wstęp wolny</label>
            @Html.RadioButtonFor(model => model.RecruitmentId, "Wolny")
            <label>Wstęp ograniczony</label>
            @Html.RadioButtonFor(model => model.RecruitmentId, "Ograniczony")
            @Html.ValidationMessageFor(model => model.RecruitmentId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Capacity)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Capacity)
            @Html.ValidationMessageFor(model => model.Capacity)
        </div>

        <!--usunuety regulamin -->
        @Html.HiddenFor(model => model.Regulations)

        <!--konstrukcja zastepuje input obrazkiem-->
        <div class="editor-field">
            <label for="fileProfileImage">
                <img src="/Content/no-img.png" id="img"/>
            </label>
            <input id="fileProfileImage" name='fileProfileImage' type="file" onchange="readURL(this,'img')" style="cursor: pointer;  display: none"/>
        </div>

        <script>
            function ifFile() {
                var src = document.getElementById(img);
                if ('@Html.DisplayFor(model => model.ProfileImage)' === 'brak') src.innerHTML += '../Content/no-img.png';
                else src.innerHTML += '../Content/Uploads/@Html.DisplayFor(model => model.ProfileImage)';
    
}</script>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)   
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactNumber)
            @Html.ValidationMessageFor(model => model.ContactNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactEmail)
            @Html.ValidationMessageFor(model => model.ContactEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Website)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Website)
            @Html.ValidationMessageFor(model => model.Website)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HourBegin)/zakończenia wydarzenia<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            <input class="text-box single-line" id="HourBegin" name="HourBegin" type="text" value="@Html.DisplayFor(model => model.HourBegin)" onclick="datetimerange()" />
            @Html.ValidationMessageFor(model => model.HourBegin)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HourBeginRegistration)/zakończenia rejestracji<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            <input class="text-box single-line" id="HourBeginRegistration" name="HourBeginRegistration" type="text" value="@Html.DisplayFor(model => model.HourBeginRegistration)" onclick="datetimerange()" />         
            @Html.ValidationMessageFor(model => model.HourBeginRegistration)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <!--tu literowka do poprawienia na bazie Voivo(w)eship-->
        <div class="editor-label">
            @Html.LabelFor(model => model.Voivoweship)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Voivoweship,(IEnumerable<SelectListItem>)ViewBag.ViowodeshipList, new { @class="form-control"})
            @Html.ValidationMessageFor(model => model.Voivoweship)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street)
            @Html.ValidationMessageFor(model => model.Street)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HouseNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HouseNumber)
            @Html.ValidationMessageFor(model => model.HouseNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApartmentNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ApartmentNumber)
            @Html.ValidationMessageFor(model => model.ApartmentNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ZipCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ZipCode)
            @Html.ValidationMessageFor(model => model.ZipCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Directions)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Directions, new { @rows = 5 })
            @Html.ValidationMessageFor(model => model.Directions)
        </div>
         <p>
            <text style="color:red">*</text>Wymagane
        </p>
        <p>
        <button type="submit" class="btn btn-default btn-sm">Zapisz</button>
        </p>
    </fieldset>
}

<!-- GALLERY START -->
  <p style="font-weight:bold; color:gray; border-bottom:1px solid gray; text-align:center; margin-top:10px;">STWÓRZ GALERIĘ ZDJĘĆ</p>

    <fieldset id="fieldsetGallery">
        <div id="Foto">
            <!--<p>Opis zdjęcia:</p>-->
            <div id="inputFoto">
                <input type="text" id="FileGalleryDescription" maxlength="50" value="Opis zdjecia:" /><p></p>
                <input id="FileGalleryAdd" type="button" value="Dodaj" class="btn btn-default btn-sm" /><p></p>
                <input id="GalleryAccept" type="button" value="Zapisz" class="btn btn-default btn-sm" /><p></p>
            </div>

            <div class="editor-field">
                <label for="FileGallerySearch">
                    <img src="/Content/no-img.png" id="FileGallery" />
                </label>
                <input id="FileGallerySearch" name='fileUpload' type="file" onchange="readURL(this,'FileGallery')" style="display: none;" />
            </div>
        </div>

        <div id="Gallery">

         @foreach (var image in ViewBag.Gallery)
         { 
             <div>
                 <p>@image.Description</p>
                 <img src="@Url.Content("~/Content/Uploads/" + @image.Url)" alt="brak"/>
                 <input id="@image.Url" class="DeleteFromDB" type="image" src="/Content/trash.png" alt="usuń" value="usuń" />              
             </div>        
         }
        </div>

    </fieldset>

<!-- GALLERY END -->


