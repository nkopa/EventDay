@model PagedList.IPagedList<EventDay.Models.Event>
@using PagedList.Mvc;
<link rel="stylesheet" type="text/css" href="~/Content/PagedList.css" property='stylesheet' />

    <!--ten widok dotyczy modelu Category -->
    <!-- IEnumerable pozwala zmienic potem typ na dowolny-->
    @{
        ViewBag.Title = "Index";
    }

    <div class="wyszukiwarka">
        @using (Html.BeginForm("Index", "Events", System.Web.Mvc.FormMethod.Get))
        {
            <p>Kategoria:
             @Html.DropDownList("eventCategory", "All")</p>
            <p>Miejscowość: 
            @Html.TextBox("Search", ViewBag.CurrentFilter as string) </p>
            <p><input type="submit" value="Wyszukaj" class="btn btn-default" /></p>
        }
    </div>

 <!--@Html.ActionLink("Najnowsze", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })-->


    @foreach (var item in Model)
    {
        <div class="event">
            <a href="@Url.Action("Details", new { id = item.EventId })">
                <ul>
                    <li style="border-bottom:1px solid darkgray;"><p >Tytuł: </p>
                    @Html.DisplayFor(modelItem => item.Title)</li>
                   <li > Data początku wydarzenia:
                   @Html.DisplayFor(modelItem => item.DateBegin)</li> 
                   <li > Data końca wydarzenia:
                  @Html.DisplayFor(modelItem => item.DateEnd)</li> 
                  <li >  Miejscowość:
                   @Html.DisplayFor(modelItem => item.City)</li> 

               </ul>
            </a>
        </div>
    }
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions {LinkToPreviousPageFormat = String.Format("&lt;&lt; Poprzednia"), LinkToNextPageFormat = String.Format("Następna &gt;&gt;") })
 