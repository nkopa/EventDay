@model EventDay.Models.UserProfile

@{
    ViewBag.Title = "Edit";
}

<h2>Edytuj swój profil</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm(Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Profil użytkownika</legend>

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.ProfileImage)
        @Html.HiddenFor(model => model.CreateTime)
        @Html.HiddenFor(model => model.UpdateTime)
        @Html.HiddenFor(model => model.StatusId)
        @Html.HiddenFor(model => model.UserName)

        <!--konstrukcja zastepuje input obrazkiem-->
        <div class="editor-field">
            <label for="fileProfileImage">
                <img src="@Url.Content("~/Content/Uploads/" + @Html.DisplayFor(model => model.ProfileImage))" alt="nie dodałeś jeszcze zdjęcia profilowego" id="img"/>
            </label>
            <input id="fileProfileImage" name='fileProfileImage' type="file" onchange="readURL(this,'img')" style="cursor: pointer;  display: none"/>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AccountTypeId)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            <label>Prywatne</label>
            @Html.RadioButtonFor(model => model.AccountTypeId, "Private")
            <label>Firma lub organizacja</label>
            @Html.RadioButtonFor(model => model.AccountTypeId, "Public")           
            @Html.ValidationMessageFor(model => model.AccountTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)<text style="color:red">*</text>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Surname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Surname)
            @Html.ValidationMessageFor(model => model.Surname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SexId)
        </div>
        <div class="editor-field">          
            <label><img src="@Url.Content("~/Content/female.png")" alt="Kobieta" /></label>           
            @Html.RadioButtonFor(model => model.SexId, "Female")
            <label><img src="@Url.Content("~/Content/male.png")" /></label>
            @Html.RadioButtonFor(model => model.SexId, "Male")           
            @Html.ValidationMessageFor(model => model.SexId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday)
        </div>
        <div class="editor-field">
            <input id="Birthday" class="text-box single-line" type="text" value="@Html.DisplayFor(model => model.Birthday)" name="Birthday"  onclick="date()" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Interest)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Interest, new { @rows = 5 })
            @Html.ValidationMessageFor(model => model.Interest)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Voivodeship)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Voivodeship,(IEnumerable<SelectListItem>)ViewBag.VoiwodeshipList, new { @class="form-control"})
            @Html.ValidationMessageFor(model => model.Voivodeship)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SmsNotification)
        </div>
        <div class="editor-field">
            <label><img src="@Url.Content("~/Content/yes.png")" alt="Tak" /></label>
            @Html.RadioButtonFor(model => model.SmsNotification, "Yes")
            <label><img src="@Url.Content("~/Content/no.png")" alt="Nie" /></label>
            @Html.RadioButtonFor(model => model.SmsNotification, "No")           
            @Html.ValidationMessageFor(model => model.SmsNotification)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <p>
              <button type="submit" class="btn btn-default btn-sm">Zapisz</button>
        </p>
    </fieldset>
}

